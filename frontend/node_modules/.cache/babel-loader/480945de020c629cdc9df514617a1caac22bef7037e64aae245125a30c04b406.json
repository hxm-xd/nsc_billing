{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add JWT token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole');\n    window.location.href = '/admin/login';\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API\nexport const authAPI = {\n  login: credentials => api.post('/authenticate', credentials),\n  logout: () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole');\n  }\n};\n\n// Products API\nexport const productAPI = {\n  getAll: () => api.get('/products'),\n  getById: id => api.get(`/products/${id}`),\n  create: product => api.post('/products', product),\n  update: (id, product) => api.put(`/products/${id}`, product),\n  delete: id => api.delete(`/products/${id}`)\n};\n\n// Services API\nexport const serviceAPI = {\n  getAll: () => api.get('/services'),\n  getById: id => api.get(`/services/${id}`),\n  create: service => api.post('/services', service),\n  update: service => api.put('/services', service),\n  delete: id => api.delete(`/services/${id}`)\n};\n\n// Bills API\nexport const billAPI = {\n  getAll: () => api.get('/bills'),\n  getById: id => api.get(`/bills/${id}`),\n  create: bill => api.post('/bills', bill),\n  update: (id, bill) => api.put(`/bills/${id}`, bill),\n  delete: id => api.delete(`/bills/${id}`)\n};\n\n// Users API\nexport const userAPI = {\n  getAll: () => api.get('/users'),\n  getById: id => api.get(`/users/${id}`),\n  create: user => api.post('/users', user),\n  update: (id, user) => api.put(`/users/${id}`, user),\n  delete: id => api.delete(`/users/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","logout","productAPI","getAll","get","getById","id","product","update","put","delete","serviceAPI","service","billAPI","bill","userAPI","user"],"sources":["D:/Git/NSC Billing System (PDSA CW)/nsc_billing/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add JWT token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('userRole');\r\n      window.location.href = '/admin/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/authenticate', credentials),\r\n  logout: () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userRole');\r\n  },\r\n};\r\n\r\n// Products API\r\nexport const productAPI = {\r\n  getAll: () => api.get('/products'),\r\n  getById: (id) => api.get(`/products/${id}`),\r\n  create: (product) => api.post('/products', product),\r\n  update: (id, product) => api.put(`/products/${id}`, product),\r\n  delete: (id) => api.delete(`/products/${id}`),\r\n};\r\n\r\n// Services API\r\nexport const serviceAPI = {\r\n  getAll: () => api.get('/services'),\r\n  getById: (id) => api.get(`/services/${id}`),\r\n  create: (service) => api.post('/services', service),\r\n  update: (service) => api.put('/services', service),\r\n  delete: (id) => api.delete(`/services/${id}`),\r\n};\r\n\r\n// Bills API\r\nexport const billAPI = {\r\n  getAll: () => api.get('/bills'),\r\n  getById: (id) => api.get(`/bills/${id}`),\r\n  create: (bill) => api.post('/bills', bill),\r\n  update: (id, bill) => api.put(`/bills/${id}`, bill),\r\n  delete: (id) => api.delete(`/bills/${id}`),\r\n};\r\n\r\n// Users API\r\nexport const userAPI = {\r\n  getAll: () => api.get('/users'),\r\n  getById: (id) => api.get(`/users/${id}`),\r\n  create: (user) => api.post('/users', user),\r\n  update: (id, user) => api.put(`/users/${id}`, user),\r\n  delete: (id) => api.delete(`/users/${id}`),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;IACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;EACvC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKxB,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAED,WAAW,CAAC;EAC9DE,MAAM,EAAEA,CAAA,KAAM;IACZjB,YAAY,CAACS,UAAU,CAAC,WAAW,CAAC;IACpCT,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;EACrC;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG;EACxBC,MAAM,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAK/B,GAAG,CAAC6B,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3C9B,MAAM,EAAG+B,OAAO,IAAKhC,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEO,OAAO,CAAC;EACnDC,MAAM,EAAEA,CAACF,EAAE,EAAEC,OAAO,KAAKhC,GAAG,CAACkC,GAAG,CAAC,aAAaH,EAAE,EAAE,EAAEC,OAAO,CAAC;EAC5DG,MAAM,EAAGJ,EAAE,IAAK/B,GAAG,CAACmC,MAAM,CAAC,aAAaJ,EAAE,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG;EACxBR,MAAM,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,WAAW,CAAC;EAClCC,OAAO,EAAGC,EAAE,IAAK/B,GAAG,CAAC6B,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;EAC3C9B,MAAM,EAAGoC,OAAO,IAAKrC,GAAG,CAACyB,IAAI,CAAC,WAAW,EAAEY,OAAO,CAAC;EACnDJ,MAAM,EAAGI,OAAO,IAAKrC,GAAG,CAACkC,GAAG,CAAC,WAAW,EAAEG,OAAO,CAAC;EAClDF,MAAM,EAAGJ,EAAE,IAAK/B,GAAG,CAACmC,MAAM,CAAC,aAAaJ,EAAE,EAAE;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMO,OAAO,GAAG;EACrBV,MAAM,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,QAAQ,CAAC;EAC/BC,OAAO,EAAGC,EAAE,IAAK/B,GAAG,CAAC6B,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EACxC9B,MAAM,EAAGsC,IAAI,IAAKvC,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAEc,IAAI,CAAC;EAC1CN,MAAM,EAAEA,CAACF,EAAE,EAAEQ,IAAI,KAAKvC,GAAG,CAACkC,GAAG,CAAC,UAAUH,EAAE,EAAE,EAAEQ,IAAI,CAAC;EACnDJ,MAAM,EAAGJ,EAAE,IAAK/B,GAAG,CAACmC,MAAM,CAAC,UAAUJ,EAAE,EAAE;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG;EACrBZ,MAAM,EAAEA,CAAA,KAAM5B,GAAG,CAAC6B,GAAG,CAAC,QAAQ,CAAC;EAC/BC,OAAO,EAAGC,EAAE,IAAK/B,GAAG,CAAC6B,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EACxC9B,MAAM,EAAGwC,IAAI,IAAKzC,GAAG,CAACyB,IAAI,CAAC,QAAQ,EAAEgB,IAAI,CAAC;EAC1CR,MAAM,EAAEA,CAACF,EAAE,EAAEU,IAAI,KAAKzC,GAAG,CAACkC,GAAG,CAAC,UAAUH,EAAE,EAAE,EAAEU,IAAI,CAAC;EACnDN,MAAM,EAAGJ,EAAE,IAAK/B,GAAG,CAACmC,MAAM,CAAC,UAAUJ,EAAE,EAAE;AAC3C,CAAC;AAED,eAAe/B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}